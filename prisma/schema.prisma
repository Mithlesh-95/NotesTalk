// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?
  image         String?
  clerkId       String        @unique
  notes         Note[]
  tasks         Task[]
  diaryEntries  DiaryEntry[]
  lectureNotes  LectureNote[]
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model DiaryEntry {
  id        Int      @id @default(autoincrement())
  content   String
  date      DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model LectureNote {
  id        Int      @id @default(autoincrement())
  subject   String
  content   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Task {
  id          Int      @id @default(autoincrement())
  description String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}
